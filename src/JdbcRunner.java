import org.postgresql.Driver;
import util.ConnectionManager;

import java.sql.SQLException;
import java.sql.Statement;

/**
 * <h1>ResultSet. Generated keys</h1>
 * Автогенерируемые ключи (PRIMARY KEY)
 * <br><br>
 * Очень часто нам необходим id (PRIMARY KEY) после вставки. Т.е. вставили данные и хотим продолжить работать
 * с объектом на уровне Java приложения. Как получить этот вновь сгенерируемый ID для того чтобы не делать
 * какой-то дополнительный запрос?
 * <br><br>
 * <b>Для того чтобы statement отслеживал generatedKeys - мы должны в метод executeUpdate передать ещё
 * один дополнительный параметр <i>Statement.RETURN_GENERATED_KEYS</i>.</b>
 * <br><br>
 * За тем вызвать <b><i>statement.getGeneratedKeys()</i></b>. Результатом выполнения будет ResultSet, потому что
 * результатом выполнения может быть много строк, не только одна. Если ожидаем много строк - проходимся при помощи
 * цикла <i>while</i>. Если одну - используем <i>if</i>.
 */
public class JdbcRunner {
    public static void main(String[] args) {
        Class<Driver> driverClass = Driver.class;
        String sql = """
                INSERT INTO info (data) VALUES ('autogenerated with git')
                """;
        try (
                var connection = ConnectionManager.open();
                var statement = connection.createStatement();
        ) {
            System.out.println(connection.getSchema());
            System.out.println(connection.getTransactionIsolation());

            var executeResult = statement.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
            var generatedKeys = statement.getGeneratedKeys(); // Получаем ResultSet

            if (generatedKeys.next()) {
                System.out.println(generatedKeys.getInt("id"));
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }
}
