package dto;

/**
 * <b>dto</b> (data transform object) - это шаблон проектирования, суть которого заключается в содержании
 * объектов, в которых есть перечень полей. Т.е. он гораздо проще, чем DAO и следовательно, такие объекты используются
 * только для передачи из одного слоя на другой. Проще говоря, просто передаем какие-то данные из уровня сервлетов
 * на сервис, либо с уровня сервис на DAO и т.д., как мы захотим.
 * <h1>Объект фильтров билетов</h1>
 * Добавим <i>limit</i> и <i>offset</i>. Только чтобы не писать тоже самое, что и писали в сущности Ticket (геттеры,
 * сеттеры, конструкторы), здесь воспользуемся возможностью из Java 14 - это <i>record</i>-ы. Record-ы нам
 * автоматически генерируют нам конструктор, которые перечислили в круглых скобках, более того, они сразу реализуют
 * toString(), equals & hashCode и геттеры к полям, сеттеры тут нельзя делать, потому его изменить после создания
 * нельзя.
 * <h2>Добавим ещё аргументов в {@code record TicketFilter(int limit, int offset)}:</h2>
 * <pre>{@code
 * public record TicketFilter(int limit, int offset, String passengerName, String seatNo) {
 * }
 * }</pre>
 */
public record TicketFilter(int limit, int offset, String passengerName, String seatNo) {
}
